!function(){"use strict";const t="localhost"===window.location.hostname?"http://localhost:8080":"https://app.bluebandedbee.co";const n=new class{constructor(){this.baseUrl=t,this.token=null}setToken(t){this.token=t}async request(t,n={}){const e=`${this.baseUrl}${t}`,a={"Content-Type":"application/json",...n.headers};if(window.BBComponents?.authManager){const t=await window.BBComponents.authManager.getSession();t?.access_token&&(a.Authorization=`Bearer ${t.access_token}`)}else this.token&&(a.Authorization=`Bearer ${this.token}`);const s={...n,headers:a};try{const t=await fetch(e,s),n=await t.json();if(!t.ok)throw new Error(n.error?.message||`HTTP ${t.status}`);return n}catch(t){throw console.error("API request failed:",t),t}}async get(t){return this.request(t,{method:"GET"})}async post(t,n){return this.request(t,{method:"POST",body:JSON.stringify(n)})}async put(t,n){return this.request(t,{method:"PUT",body:JSON.stringify(n)})}async delete(t){return this.request(t,{method:"DELETE"})}async getJobs(t={}){const n=new URLSearchParams(t).toString(),e=n?`/v1/jobs?${n}`:"/v1/jobs";return this.get(e)}async getJob(t){return this.get(`/v1/jobs/${t}`)}async createJob(t){return this.post("/v1/jobs",t)}async getJobTasks(t,n={}){const e=new URLSearchParams(n).toString(),a=e?`/v1/jobs/${t}/tasks?${e}`:`/v1/jobs/${t}/tasks`;return this.get(a)}async getUserProfile(){return this.get("/v1/auth/profile")}};var e=Object.freeze({__proto__:null,api:n});class a extends HTMLElement{constructor(){super(),this._isComponentConnected=!1,this.loadingStates=new Map,this.errorStates=new Map}connectedCallback(){this._isComponentConnected=!0,this.render(),this.setupEventListeners()}disconnectedCallback(){this._isComponentConnected=!1,this.cleanup()}attributeChangedCallback(t,n,e){n!==e&&this._isComponentConnected&&this.handleAttributeChange(t,n,e)}render(){}setupEventListeners(){}cleanup(){}handleAttributeChange(t,n,e){}getAttribute(t,n=null){return super.getAttribute(t)||n}getBooleanAttribute(t){return this.hasAttribute(t)&&"false"!==this.getAttribute(t)}getNumberAttribute(t,n=0){const e=this.getAttribute(t);return e?parseInt(e,10):n}setLoading(t,n){this.loadingStates.set(t,n),this.updateLoadingState()}isLoading(t=null){return t?this.loadingStates.get(t)||!1:Array.from(this.loadingStates.values()).some((t=>t))}updateLoadingState(){const t=this.isLoading();this.classList.toggle("bb-loading",t);this.querySelectorAll(".bb-loading-indicator").forEach((n=>{n.style.display=t?"block":"none"}))}setError(t,n){n?this.errorStates.set(t,n):this.errorStates.delete(t),this.updateErrorState()}hasError(t=null){return t?this.errorStates.has(t):this.errorStates.size>0}updateErrorState(){const t=this.hasError();this.classList.toggle("bb-error",t);const n=this.querySelectorAll(".bb-error-message");if(t){const t=Array.from(this.errorStates.values())[0];n.forEach((n=>{n.textContent=t.message||t.toString(),n.style.display="block"}))}else n.forEach((t=>{t.style.display="none"}))}populateTemplate(t,n,e=null){const a=this.querySelector(t),s=e?this.querySelector(e):this;if(!a)return console.warn(`Template not found: ${t}`),null;const i=a.cloneNode(!0);return i.classList.remove("template"),i.style.display="",this.bindDataToElement(i,n),s&&s!==this&&s.appendChild(i),i}bindDataToElement(t,n){t.querySelectorAll("[data-bind]").forEach((t=>{const e=t.dataset.bind,a=this.getNestedValue(n,e);void 0!==a&&("INPUT"===t.tagName||"TEXTAREA"===t.tagName?t.value=a:t.textContent=a)}));t.querySelectorAll("[data-style-bind]").forEach((t=>{t.dataset.styleBind.split(",").forEach((e=>{const[a,s]=e.split(":"),i=this.getNestedValue(n,s.trim());void 0!==i&&(t.style[a.trim()]=i)}))}))}getNestedValue(t,n){return n.split(".").reduce(((t,n)=>t?.[n]),t)}dispatchCustomEvent(t,n={}){const e=new CustomEvent(`bb:${t}`,{detail:n,bubbles:!0,cancelable:!0});this.dispatchEvent(e)}getLoadingHTML(){return'<div class="bb-loading-indicator" style="display: none;">Loading...</div>'}getErrorHTML(){return'<div class="bb-error-message" style="display: none;"></div>'}}const s=new class{constructor(){this.user=null,this.session=null,this.listeners=new Set,this.supabase=null,this.init()}async init(){await this.waitForSupabase();const{data:{session:t}}=await this.supabase.auth.getSession();this.setSession(t),this.supabase.auth.onAuthStateChange(((t,n)=>{this.setSession(n),this.notifyListeners(t,n)}))}async waitForSupabase(){if(!window.supabase||"function"!=typeof window.supabase.createClient)return new Promise((t=>{const n=()=>{window.supabase&&"function"==typeof window.supabase.createClient?(this.supabase=window.supabase.createClient("https://auth.bluebandedbee.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdwemp0Ymd0ZGp4bmFjZGZ1anZ4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUwNjYxNjMsImV4cCI6MjA2MDY0MjE2M30.eJjM2-3X8oXsFex_lQKvFkP1-_yLMHsueIn7_hCF6YI"),t()):setTimeout(n,100)};n()}));this.supabase=window.supabase.createClient("https://auth.bluebandedbee.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdwemp0Ymd0ZGp4bmFjZGZ1anZ4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUwNjYxNjMsImV4cCI6MjA2MDY0MjE2M30.eJjM2-3X8oXsFex_lQKvFkP1-_yLMHsueIn7_hCF6YI")}setSession(t){this.session=t,this.user=t?.user||null,t?.access_token?n.setToken(t.access_token):n.setToken(null)}async signIn(t,n){this.supabase||await this.waitForSupabase();const{data:e,error:a}=await this.supabase.auth.signInWithPassword({email:t,password:n});if(a)throw a;return e}async signUp(t,n,e={},a=null){this.supabase||await this.waitForSupabase();const s={data:e};a&&(s.captchaToken=a);const{data:i,error:r}=await this.supabase.auth.signUp({email:t,password:n,options:s});if(r)throw r;return i}async signInWithProvider(t){this.supabase||await this.waitForSupabase();const{data:n,error:e}=await this.supabase.auth.signInWithOAuth({provider:t,options:{redirectTo:window.location.origin+"/dashboard"}});if(e)throw e;return n}async signOut(){this.supabase||await this.waitForSupabase();const{error:t}=await this.supabase.auth.signOut();if(t)throw t}async resetPassword(t){this.supabase||await this.waitForSupabase();const{data:n,error:e}=await this.supabase.auth.resetPasswordForEmail(t,{redirectTo:window.location.origin+"/reset-password"});if(e)throw e;return n}isAuthenticated(){return!!this.session}getUser(){return this.user}getSession(){return this.session}getToken(){return this.session?.access_token||null}onAuthStateChange(t){return this.listeners.add(t),()=>{this.listeners.delete(t)}}notifyListeners(t,n){this.listeners.forEach((e=>{try{e(t,n)}catch(t){console.error("Auth listener error:",t)}}))}async getUserProfile(){if(!this.isAuthenticated())throw new Error("User not authenticated");try{return await n.getUserProfile()}catch(t){throw console.error("Failed to get user profile:",t),t}}async updateProfile(t){this.supabase||await this.waitForSupabase();const{data:n,error:e}=await this.supabase.auth.updateUser(t);if(e)throw e;return n}};function i(t){return!!s.isAuthenticated()||(t.innerHTML='\n      <div class="bb-auth-required">\n        <p>Please log in to access this feature.</p>\n        <bb-auth-login></bb-auth-login>\n      </div>\n    ',!1)}var r=Object.freeze({__proto__:null,authManager:s,requireAuth:i});customElements.define("bb-data-loader",class extends a{static get observedAttributes(){return["endpoint","template","target","auto-load","require-auth","refresh-interval"]}constructor(){super(),this.refreshTimer=null,this.data=null}connectedCallback(){super.connectedCallback(),this.getBooleanAttribute("require-auth")&&!i(this)||(this.getBooleanAttribute("auto-load")&&this.loadData(),this.setupRefreshTimer())}disconnectedCallback(){super.disconnectedCallback(),this.clearRefreshTimer()}handleAttributeChange(t,n,e){switch(t){case"endpoint":this.getBooleanAttribute("auto-load")&&this.loadData();break;case"refresh-interval":this.setupRefreshTimer()}}render(){this.innerHTML.trim()||(this.innerHTML=`\n        ${this.getLoadingHTML()}\n        ${this.getErrorHTML()}\n      `)}async loadData(){const t=this.getAttribute("endpoint");if(t){this.setLoading("data",!0),this.setError("endpoint",null);try{const e=await n.get(t);this.data=e.data,this.populateTemplates(),this.dispatchCustomEvent("data-loaded",{data:this.data,endpoint:t})}catch(n){this.setError("endpoint",n),this.dispatchCustomEvent("data-error",{error:n,endpoint:t})}finally{this.setLoading("data",!1)}}else this.setError("endpoint",new Error("No endpoint specified"))}populateTemplates(){const t=this.getAttribute("template"),n=this.getAttribute("target");if(t&&this.data){if(n){const t=document.querySelector(n);if(t){t.querySelectorAll(":not(.template)").forEach((t=>t.remove()))}}Array.isArray(this.data)?this.data.forEach((e=>{this.populateTemplate(t,e,n)})):"object"==typeof this.data&&this.populateTemplate(t,this.data,n)}}populateTemplate(t,n,e=null){const a=super.populateTemplate(t,n,e);if(a){a.querySelectorAll("[data-link]").forEach((t=>{t.addEventListener("click",(e=>{e.preventDefault();const a=t.dataset.link;this.handleLinkClick(a,n,t)}))}));a.querySelectorAll("[data-form]").forEach((t=>{t.addEventListener("submit",(e=>{e.preventDefault();const a=t.dataset.form;this.handleFormSubmit(a,n,t)}))}))}return a}handleLinkClick(t,n,e){switch(t){case"job-details":window.location.href=`/jobs?id=${n.id}`;break;case"cancel-job":this.cancelJob(n.id);break;default:this.dispatchCustomEvent("link-click",{linkType:t,data:n,element:e})}}handleFormSubmit(t,n,e){this.dispatchCustomEvent("form-submit",{formType:t,data:n,form:e})}async cancelJob(t){try{this.setLoading("cancel",!0),await n.post(`/v1/jobs/${t}/cancel`),this.loadData(),this.dispatchCustomEvent("job-cancelled",{jobId:t})}catch(t){this.setError("cancel",t)}finally{this.setLoading("cancel",!1)}}setupRefreshTimer(){this.clearRefreshTimer();const t=this.getNumberAttribute("refresh-interval");t>0&&(this.refreshTimer=setInterval((()=>{this._isComponentConnected&&!this.isLoading()&&this.loadData()}),1e3*t))}clearRefreshTimer(){this.refreshTimer&&(clearInterval(this.refreshTimer),this.refreshTimer=null)}refresh(){this.loadData()}getData(){return this.data}});customElements.define("bb-auth-login",class extends a{static get observedAttributes(){return["redirect-url","show-providers","compact"]}constructor(){super(),this.unsubscribeAuth=null}connectedCallback(){super.connectedCallback(),this.unsubscribeAuth=s.onAuthStateChange(((t,n)=>{n&&this.hasAttribute("redirect-url")&&this.handleSuccessfulLogin()})),s.isAuthenticated()&&this.hasAttribute("redirect-url")&&this.handleSuccessfulLogin()}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribeAuth&&this.unsubscribeAuth()}render(){const t=this.getBooleanAttribute("compact"),n=this.getBooleanAttribute("show-providers");this.innerHTML=`\n      <div class="bb-auth-login ${t?"compact":""}">\n        ${this.getErrorHTML()}\n        ${this.getLoadingHTML()}\n        \n        <form class="bb-login-form" data-form="login">\n          <div class="form-group">\n            <label for="bb-email">Email</label>\n            <input \n              type="email" \n              id="bb-email" \n              name="email" \n              required\n              placeholder="Enter your email"\n            >\n          </div>\n          \n          <div class="form-group">\n            <label for="bb-password">Password</label>\n            <input \n              type="password" \n              id="bb-password" \n              name="password" \n              required\n              placeholder="Enter your password"\n            >\n          </div>\n          \n          <button type="submit" class="bb-btn bb-btn-primary">\n            Sign In\n          </button>\n          \n          <div class="bb-auth-links">\n            <a href="#" data-action="forgot-password">Forgot password?</a>\n            <a href="#" data-action="show-signup">Need an account? Sign up</a>\n          </div>\n        </form>\n        \n        ${n?this.renderSocialProviders():""}\n      </div>\n    `}renderSocialProviders(){return'\n      <div class="bb-social-login">\n        <div class="bb-divider">\n          <span>or continue with</span>\n        </div>\n        \n        <div class="bb-social-buttons">\n          <button type="button" class="bb-btn bb-btn-social" data-provider="google">\n            <span class="bb-social-icon">G</span>\n            Google\n          </button>\n          \n          <button type="button" class="bb-btn bb-btn-social" data-provider="github">\n            <span class="bb-social-icon">GH</span>\n            GitHub\n          </button>\n          \n          <button type="button" class="bb-btn bb-btn-social" data-provider="slack">\n            <span class="bb-social-icon">S</span>\n            Slack\n          </button>\n        </div>\n      </div>\n    '}setupEventListeners(){const t=this.querySelector(".bb-login-form");t&&t.addEventListener("submit",(t=>this.handleLogin(t)));this.querySelectorAll("[data-provider]").forEach((t=>{t.addEventListener("click",(t=>{const n=t.currentTarget.dataset.provider;this.handleSocialLogin(n)}))}));this.querySelectorAll("[data-action]").forEach((t=>{t.addEventListener("click",(t=>{t.preventDefault();const n=t.currentTarget.dataset.action;this.handleAction(n)}))}))}async handleLogin(t){t.preventDefault();const n=new FormData(t.target),e=n.get("email"),a=n.get("password");this.setLoading("login",!0),this.setError("login",null);try{await s.signIn(e,a)}catch(t){this.setError("login",t)}finally{this.setLoading("login",!1)}}async handleSocialLogin(t){this.setLoading("social",!0),this.setError("social",null);try{await s.signInWithProvider(t)}catch(t){this.setError("social",t),this.setLoading("social",!1)}}handleAction(t){switch(t){case"forgot-password":this.showForgotPassword();break;case"show-signup":this.dispatchCustomEvent("show-signup")}}showForgotPassword(){const t=this.querySelector("#bb-email").value;t?this.sendPasswordReset(t):alert("Please enter your email address first.")}async sendPasswordReset(t){this.setLoading("reset",!0);try{await s.resetPassword(t),alert("Password reset email sent! Check your inbox.")}catch(t){this.setError("reset",t)}finally{this.setLoading("reset",!1)}}handleSuccessfulLogin(){const t=this.getAttribute("redirect-url");this.dispatchCustomEvent("login-success",{user:s.getUser(),redirectUrl:t}),t&&""!==t&&t!==window.location.pathname&&setTimeout((()=>{window.location.href=t}),100)}});function o(){if(console.log("Blue Banded Bee Web Components loaded successfully"),!document.querySelector("#bb-components-styles")){const t=document.createElement("style");t.id="bb-components-styles",t.textContent="\n    /* Blue Banded Bee Component Styles */\n    .bb-loading {\n      opacity: 0.7;\n      pointer-events: none;\n    }\n    \n    .bb-loading-indicator {\n      padding: 20px;\n      text-align: center;\n      color: #666;\n    }\n    \n    .bb-error {\n      border: 1px solid #ff6b6b;\n      border-radius: 4px;\n      background: #fff5f5;\n    }\n    \n    .bb-error-message {\n      padding: 10px;\n      color: #d63031;\n      background: #fff5f5;\n      border-radius: 4px;\n      margin: 10px 0;\n    }\n    \n    .bb-btn {\n      display: inline-block;\n      padding: 12px 24px;\n      border: none;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    \n    .bb-btn-primary {\n      background: #0066ff;\n      color: white;\n    }\n    \n    .bb-btn-primary:hover {\n      background: #0052cc;\n    }\n    \n    .bb-btn-social {\n      background: white;\n      border: 1px solid #ddd;\n      color: #333;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      width: 100%;\n      justify-content: center;\n      margin: 5px 0;\n    }\n    \n    .bb-btn-social:hover {\n      background: #f8f9fa;\n    }\n    \n    .bb-social-icon {\n      font-weight: bold;\n      font-size: 16px;\n    }\n    \n    .bb-auth-login .form-group {\n      margin-bottom: 16px;\n    }\n    \n    .bb-auth-login label {\n      display: block;\n      margin-bottom: 4px;\n      font-weight: 500;\n    }\n    \n    .bb-auth-login input {\n      width: 100%;\n      padding: 12px;\n      border: 1px solid #ddd;\n      border-radius: 6px;\n      font-size: 14px;\n    }\n    \n    .bb-auth-login input:focus {\n      outline: none;\n      border-color: #0066ff;\n      box-shadow: 0 0 0 3px rgba(0, 102, 255, 0.1);\n    }\n    \n    .bb-auth-links {\n      margin-top: 16px;\n      text-align: center;\n    }\n    \n    .bb-auth-links a {\n      color: #0066ff;\n      text-decoration: none;\n      font-size: 14px;\n      margin: 0 8px;\n    }\n    \n    .bb-divider {\n      margin: 20px 0;\n      text-align: center;\n      position: relative;\n      color: #666;\n      font-size: 14px;\n    }\n    \n    .bb-divider::before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 0;\n      right: 0;\n      height: 1px;\n      background: #ddd;\n      z-index: 1;\n    }\n    \n    .bb-divider span {\n      background: white;\n      padding: 0 16px;\n      position: relative;\n      z-index: 2;\n    }\n    \n    .template {\n      display: none !important;\n    }\n  ",document.head.appendChild(t)}}customElements.define("bb-job-dashboard",class extends a{static get observedAttributes(){return["auto-load","refresh-interval","show-charts","date-range","limit"]}constructor(){super(),this.refreshTimer=null,this.dashboardData=null,this.charts=new Map}connectedCallback(){super.connectedCallback(),i(this)&&(this.render(),this.getBooleanAttribute("auto-load")&&this.loadDashboard(),this.setupRefreshTimer())}disconnectedCallback(){super.disconnectedCallback(),this.clearRefreshTimer(),this.destroyCharts()}handleAttributeChange(t,n,e){switch(t){case"date-range":case"limit":this.getBooleanAttribute("auto-load")&&this.loadDashboard();break;case"refresh-interval":this.setupRefreshTimer()}}render(){this.innerHTML=`\n      <div class="bb-dashboard">\n        ${this.getLoadingHTML()}\n        ${this.getErrorHTML()}\n        \n        \x3c!-- Stats Overview Cards --\x3e\n        <div class="bb-stats-grid" data-bind-container="stats">\n          ${this.getStatsLoadingHTML()}\n        </div>\n\n        \x3c!-- Recent Jobs Section --\x3e\n        <div class="bb-jobs-section">\n          <div class="bb-section-header">\n            <h3>Recent Jobs</h3>\n            <div class="bb-section-actions">\n              <button class="bb-btn bb-btn-secondary" data-action="refresh">\n                <span class="bb-icon">↻</span> Refresh\n              </button>\n              <button class="bb-btn bb-btn-primary" data-action="create-job">\n                <span class="bb-icon">+</span> New Job\n              </button>\n            </div>\n          </div>\n          \n          <div class="bb-jobs-list" data-bind-container="jobs">\n            ${this.getJobsLoadingHTML()}\n          </div>\n        </div>\n\n        \x3c!-- Performance Chart (if enabled) --\x3e\n        ${this.getBooleanAttribute("show-charts")?this.getChartsHTML():""}\n      </div>\n\n      \x3c!-- Job Card Template --\x3e\n      <template class="bb-job-card-template">\n        <div class="bb-job-card" data-job-id="{id}">\n          <div class="bb-job-header">\n            <div class="bb-job-domain" data-bind="domains.name">{domains.name}</div>\n            <div class="bb-job-status bb-status-{status}" data-bind="status">{status}</div>\n          </div>\n          \n          <div class="bb-job-progress">\n            <div class="bb-progress-bar">\n              <div class="bb-progress-fill" data-style-bind="width:{progress}%"></div>\n            </div>\n            <div class="bb-progress-text">\n              <span data-bind="completed_tasks">{completed_tasks}</span> / \n              <span data-bind="total_tasks">{total_tasks}</span> tasks\n              (<span data-bind="progress">{progress}</span>%)\n            </div>\n          </div>\n\n          <div class="bb-job-meta">\n            <div class="bb-job-time">\n              <span class="bb-label">Started:</span>\n              <span data-bind="started_at|formatDate">{started_at}</span>\n            </div>\n            <div class="bb-job-actions">\n              <button class="bb-btn-link" data-link="job-details" data-job-id="{id}">\n                View Details\n              </button>\n              ${this.getJobActionButtons()}\n            </div>\n          </div>\n        </div>\n      </template>\n\n      \x3c!-- Stats Card Template --\x3e\n      <template class="bb-stats-card-template">\n        <div class="bb-stat-card bb-stat-{type}">\n          <div class="bb-stat-value" data-bind="value">{value}</div>\n          <div class="bb-stat-label" data-bind="label">{label}</div>\n          <div class="bb-stat-trend" data-bind="trend" data-show-if="trend">\n            <span class="bb-trend-{trend.direction}" data-bind="trend.text">{trend.text}</span>\n          </div>\n        </div>\n      </template>\n\n      ${this.getDashboardStyles()}\n    `,this.setupEventHandlers()}getJobActionButtons(){return'\n      <button class="bb-btn-link bb-btn-cancel" data-link="cancel-job" data-job-id="{id}" data-show-if="status=running">\n        Cancel\n      </button>\n      <button class="bb-btn-link bb-btn-retry" data-link="retry-job" data-job-id="{id}" data-show-if="status=failed">\n        Retry\n      </button>\n    '}getChartsHTML(){return'\n      <div class="bb-charts-section">\n        <div class="bb-chart-container">\n          <h4>Job Activity</h4>\n          <canvas class="bb-activity-chart" width="400" height="200"></canvas>\n        </div>\n      </div>\n    '}getStatsLoadingHTML(){return'\n      <div class="bb-loading-stats">\n        <div class="bb-skeleton bb-skeleton-card"></div>\n        <div class="bb-skeleton bb-skeleton-card"></div>\n        <div class="bb-skeleton bb-skeleton-card"></div>\n        <div class="bb-skeleton bb-skeleton-card"></div>\n      </div>\n    '}getJobsLoadingHTML(){return'\n      <div class="bb-loading-jobs">\n        <div class="bb-skeleton bb-skeleton-job"></div>\n        <div class="bb-skeleton bb-skeleton-job"></div>\n        <div class="bb-skeleton bb-skeleton-job"></div>\n      </div>\n    '}setupEventHandlers(){this.addEventListener("click",(t=>{const n=t.target.dataset.action;n&&this.handleAction(n,t.target);const e=t.target.dataset.link;e&&(t.preventDefault(),this.handleLinkClick(e,t.target))}))}handleAction(t,n){switch(t){case"refresh":this.loadDashboard();break;case"create-job":this.dispatchCustomEvent("create-job-requested")}}handleLinkClick(t,n){const e=n.dataset.jobId;switch(t){case"job-details":this.dispatchCustomEvent("job-details-requested",{jobId:e});break;case"cancel-job":this.cancelJob(e);break;case"retry-job":this.retryJob(e)}}async loadDashboard(){this.setLoading("dashboard",!0),this.setError("dashboard",null);try{const[t,n]=await Promise.all([this.loadStats(),this.loadJobs()]);this.dashboardData={stats:t,jobs:n},this.updateStats(t),this.updateJobs(n),this.getBooleanAttribute("show-charts")&&await this.updateCharts(),this.dispatchCustomEvent("dashboard-loaded",{data:this.dashboardData})}catch(t){this.setError("dashboard",t),this.dispatchCustomEvent("dashboard-error",{error:t})}finally{this.setLoading("dashboard",!1)}}async loadStats(){const t=this.getAttribute("date-range")||"last7";return(await n.get(`/v1/dashboard/stats?range=${t}`)).data}async loadJobs(){const t=this.getNumberAttribute("limit")||10,e=this.getAttribute("date-range")||"last7";return(await n.get(`/v1/jobs?limit=${t}&range=${e}&include=domain,progress`)).data}updateStats(t){const n=this.querySelector('[data-bind-container="stats"]');if(!n)return;const e=n.querySelector(".bb-loading-stats");e&&(e.style.display="none");const a=[{type:"total",value:t.total_jobs||0,label:"Total Jobs",trend:t.total_trend},{type:"running",value:t.running_jobs||0,label:"Running",trend:t.running_trend},{type:"completed",value:t.completed_jobs||0,label:"Completed",trend:t.completed_trend},{type:"failed",value:t.failed_jobs||0,label:"Failed",trend:t.failed_trend}];n.querySelectorAll(".bb-stat-card").forEach((t=>t.remove())),a.forEach((t=>{this.populateTemplate(".bb-stats-card-template",t,'[data-bind-container="stats"]')}))}updateJobs(t){const n=this.querySelector('[data-bind-container="jobs"]');if(!n)return;const e=n.querySelector(".bb-loading-jobs");e&&(e.style.display="none");n.querySelectorAll(".bb-job-card").forEach((t=>t.remove())),t.jobs&&0!==t.jobs.length?t.jobs.forEach((t=>{const n={...t,progress:Math.round(t.progress||0),started_at:this.formatDate(t.started_at),completed_at:this.formatDate(t.completed_at)};this.populateTemplate(".bb-job-card-template",n,'[data-bind-container="jobs"]')})):n.innerHTML='\n        <div class="bb-empty-state">\n          <div class="bb-empty-icon">📋</div>\n          <h4>No Jobs Found</h4>\n          <p>Get started by creating your first cache warming job.</p>\n          <button class="bb-btn bb-btn-primary" data-action="create-job">\n            <span class="bb-icon">+</span> Create First Job\n          </button>\n        </div>\n      '}async updateCharts(){if(this.getBooleanAttribute("show-charts"))try{const t=await n.get("/v1/dashboard/activity");this.renderActivityChart(t.data)}catch(t){console.warn("Failed to load chart data:",t)}}renderActivityChart(t){const n=this.querySelector(".bb-activity-chart");n&&n.getContext("2d")}async cancelJob(t){if(confirm("Are you sure you want to cancel this job?"))try{this.setLoading("cancel",!0),await n.post(`/v1/jobs/${t}/cancel`),this.loadDashboard(),this.dispatchCustomEvent("job-cancelled",{jobId:t})}catch(t){this.setError("cancel",t)}finally{this.setLoading("cancel",!1)}}async retryJob(t){try{this.setLoading("retry",!0),await n.post(`/v1/jobs/${t}/retry`),this.loadDashboard(),this.dispatchCustomEvent("job-retried",{jobId:t})}catch(t){this.setError("retry",t)}finally{this.setLoading("retry",!1)}}formatDate(t){if(!t)return"-";return new Date(t+(t.includes("Z")?"":"Z")).toLocaleString("en-AU",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"})}setupRefreshTimer(){this.clearRefreshTimer();const t=this.getNumberAttribute("refresh-interval");t>0&&(this.refreshTimer=setInterval((()=>{this._isComponentConnected&&!this.isLoading()&&this.loadDashboard()}),1e3*t))}clearRefreshTimer(){this.refreshTimer&&(clearInterval(this.refreshTimer),this.refreshTimer=null)}destroyCharts(){this.charts.forEach((t=>{t&&t.destroy&&t.destroy()})),this.charts.clear()}getDashboardStyles(){return"\n      <style>\n        .bb-dashboard {\n          max-width: 1200px;\n          margin: 0 auto;\n          padding: 20px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        }\n\n        .bb-stats-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 20px;\n          margin-bottom: 30px;\n        }\n\n        .bb-stat-card {\n          background: white;\n          padding: 24px;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          text-align: center;\n          border: 1px solid #f0f0f0;\n        }\n\n        .bb-stat-value {\n          font-size: 2.5em;\n          font-weight: 700;\n          margin-bottom: 8px;\n          color: #1a1a1a;\n        }\n\n        .bb-stat-label {\n          color: #666;\n          font-size: 14px;\n          font-weight: 500;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n        }\n\n        .bb-stat-trend {\n          margin-top: 8px;\n          font-size: 12px;\n        }\n\n        .bb-trend-up { color: #22c55e; }\n        .bb-trend-down { color: #ef4444; }\n        .bb-trend-stable { color: #6b7280; }\n\n        .bb-stat-running .bb-stat-value { color: #3b82f6; }\n        .bb-stat-completed .bb-stat-value { color: #22c55e; }\n        .bb-stat-failed .bb-stat-value { color: #ef4444; }\n\n        .bb-jobs-section {\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          overflow: hidden;\n          margin-bottom: 30px;\n        }\n\n        .bb-section-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 24px 24px 0 24px;\n          margin-bottom: 20px;\n        }\n\n        .bb-section-header h3 {\n          margin: 0;\n          font-size: 1.25em;\n          font-weight: 600;\n        }\n\n        .bb-section-actions {\n          display: flex;\n          gap: 12px;\n        }\n\n        .bb-jobs-list {\n          padding: 0 24px 24px 24px;\n        }\n\n        .bb-job-card {\n          background: #f8f9fa;\n          border: 1px solid #e9ecef;\n          border-radius: 8px;\n          padding: 20px;\n          margin-bottom: 16px;\n          transition: all 0.2s ease;\n        }\n\n        .bb-job-card:hover {\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n          transform: translateY(-1px);\n        }\n\n        .bb-job-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 16px;\n        }\n\n        .bb-job-domain {\n          font-weight: 600;\n          font-size: 1.1em;\n          color: #1a1a1a;\n        }\n\n        .bb-job-status {\n          padding: 6px 12px;\n          border-radius: 20px;\n          font-size: 12px;\n          font-weight: 600;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n        }\n\n        .bb-status-running { background: #dbeafe; color: #1d4ed8; }\n        .bb-status-completed { background: #dcfce7; color: #16a34a; }\n        .bb-status-failed { background: #fee2e2; color: #dc2626; }\n        .bb-status-pending { background: #fef3c7; color: #d97706; }\n\n        .bb-job-progress {\n          margin-bottom: 16px;\n        }\n\n        .bb-progress-bar {\n          width: 100%;\n          height: 8px;\n          background: #e5e7eb;\n          border-radius: 4px;\n          overflow: hidden;\n          margin-bottom: 8px;\n        }\n\n        .bb-progress-fill {\n          height: 100%;\n          background: linear-gradient(90deg, #3b82f6, #1d4ed8);\n          transition: width 0.3s ease;\n        }\n\n        .bb-progress-text {\n          font-size: 14px;\n          color: #6b7280;\n        }\n\n        .bb-job-meta {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          font-size: 14px;\n        }\n\n        .bb-job-time {\n          color: #6b7280;\n        }\n\n        .bb-label {\n          font-weight: 500;\n        }\n\n        .bb-job-actions {\n          display: flex;\n          gap: 12px;\n        }\n\n        .bb-btn {\n          padding: 8px 16px;\n          border-radius: 6px;\n          border: none;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          display: inline-flex;\n          align-items: center;\n          gap: 6px;\n          text-decoration: none;\n        }\n\n        .bb-btn-primary {\n          background: #3b82f6;\n          color: white;\n        }\n\n        .bb-btn-primary:hover {\n          background: #2563eb;\n        }\n\n        .bb-btn-secondary {\n          background: #f3f4f6;\n          color: #374151;\n        }\n\n        .bb-btn-secondary:hover {\n          background: #e5e7eb;\n        }\n\n        .bb-btn-link {\n          background: none;\n          border: none;\n          color: #3b82f6;\n          padding: 0;\n          font-size: 14px;\n          cursor: pointer;\n        }\n\n        .bb-btn-link:hover {\n          color: #2563eb;\n          text-decoration: underline;\n        }\n\n        .bb-btn-cancel { color: #ef4444; }\n        .bb-btn-cancel:hover { color: #dc2626; }\n\n        .bb-empty-state {\n          text-align: center;\n          padding: 60px 20px;\n          color: #6b7280;\n        }\n\n        .bb-empty-icon {\n          font-size: 3em;\n          margin-bottom: 16px;\n        }\n\n        .bb-empty-state h4 {\n          margin: 0 0 8px 0;\n          color: #374151;\n        }\n\n        .bb-empty-state p {\n          margin: 0 0 24px 0;\n        }\n\n        .bb-skeleton {\n          background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n          background-size: 200% 100%;\n          animation: bb-skeleton-loading 1.5s infinite;\n          border-radius: 6px;\n        }\n\n        .bb-skeleton-card {\n          height: 100px;\n          margin-bottom: 16px;\n        }\n\n        .bb-skeleton-job {\n          height: 120px;\n          margin-bottom: 16px;\n        }\n\n        @keyframes bb-skeleton-loading {\n          0% { background-position: 200% 0; }\n          100% { background-position: -200% 0; }\n        }\n\n        .bb-charts-section {\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          padding: 24px;\n        }\n\n        .bb-chart-container h4 {\n          margin: 0 0 20px 0;\n          font-size: 1.1em;\n          font-weight: 600;\n        }\n\n        @media (max-width: 768px) {\n          .bb-dashboard {\n            padding: 16px;\n          }\n\n          .bb-stats-grid {\n            grid-template-columns: repeat(2, 1fr);\n            gap: 16px;\n          }\n\n          .bb-section-header {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 16px;\n          }\n\n          .bb-job-meta {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 12px;\n          }\n        }\n      </style>\n    "}refresh(){this.loadDashboard()}getDashboardData(){return this.dashboardData}}),window.BBComponents={version:"1.0.0",components:{"bb-data-loader":"BBDataLoader","bb-auth-login":"BBAuthLogin","bb-job-dashboard":"BBJobDashboard"},async loadData(t){const{api:n}=await Promise.resolve().then((function(){return e}));return n.get(t)},getAuthManager:()=>Promise.resolve().then((function(){return r})).then((t=>t.authManager))},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",o):o()}();
