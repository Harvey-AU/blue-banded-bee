codecov:
  require_ci_to_pass: yes
  branch: main

coverage:
  precision: 2
  round: down
  range: "0...100"

  status:
    project:
      default:
        target: 45%
        threshold: 1%
        base: auto
        if_ci_failed: error
        informational: true
        only_pulls: false # Important: Allow status checks on push events
    patch:
      default:
        target: 0%
        threshold: 1%
        base: auto
        if_ci_failed: error
        informational: true
        only_pulls: false # Important: Allow status checks on push events

comment:
  layout: "reach,diff,flags,files,footer"
  behavior: default
  require_changes: no
  require_base: false # Don't require base report for comments
  require_head: true

# Flags group coverage reports by test type, service, etc.
flags:
  # All tests
  all:
    paths:
      - "**/*.go"
    carryforward: true

  # Unit tests (tests with mocks, no DB)
  unit:
    paths:
      - "**/*.go"
    carryforward: true

  # Integration tests (tests with real database)
  integration:
    paths:
      - "**/*.go"
    carryforward: true

# Components group files into logical parts of your application
component_management:
  default_rules: # rules that will be inherited by all components
    statuses:
      - type: project
        target: auto
        threshold: 1%

  individual_components:
    - component_id: api
      name: API Layer
      paths:
        - "internal/api/**"

    - component_id: crawler
      name: Web Crawler
      paths:
        - "internal/crawler/**"

    - component_id: jobs
      name: Job Management
      paths:
        - "internal/jobs/**"

    - component_id: database
      name: Database Layer
      paths:
        - "internal/db/**"

    - component_id: auth
      name: Authentication
      paths:
        - "internal/auth/**"

    - component_id: cmd
      name: Applications
      paths:
        - "cmd/**"
# Static analysis configuration (BETA feature) - Temporarily disabled
# static_analysis:
#   enabled: true
#   # Configure which issues to report
#   rules:
#     complexity:
#       enabled: true
#       threshold: 10  # Flag functions with complexity > 10
#     security:
#       enabled: true
#     maintainability:
#       enabled: true
