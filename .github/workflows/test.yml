name: Run Tests
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Go 1.25rc2
        run: |
          wget https://go.dev/dl/go1.25rc2.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.25rc2.linux-amd64.tar.gz
          echo "/usr/local/go/bin" >> $GITHUB_PATH
        shell: bash

      - name: Check Go version
        run: go version

      - name: Run tests and generate coverage report
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        run: |
          # Install tools for test reporting
          go install github.com/jstemmer/go-junit-report/v2@latest
          
          # Run tests with JSON output, save to file first to preserve exit code
          set +e  # Don't exit on error temporarily
          go test -v -coverprofile=coverage.out ./... -json > test-output.json
          TEST_EXIT_CODE=$?
          echo "Test exit code: $TEST_EXIT_CODE"
          set -e  # Re-enable exit on error
          
          # Show some test output for debugging
          echo "=== Test Results ==="
          if grep -q '"Action":"fail"' test-output.json; then
            echo "Found test failures:"
            grep -E '"Action":"fail"' test-output.json || true
            grep -B 5 -A 5 '"Action":"fail"' test-output.json | head -50 || true
          else
            echo "All tests passed!"
            echo "Packages tested:"
            grep '"Action":"pass"' test-output.json | grep -o '"Package":"[^"]*"' | sort -u || true
          fi
          
          # Convert to JUnit XML (this won't fail even if tests failed)
          $(go env GOPATH)/bin/go-junit-report -parser gojson < test-output.json > junit.xml
          
          # Show coverage summary
          echo "=== Coverage Summary ==="
          go tool cover -func=coverage.out || true
          
          # Exit with the original test exit code
          exit ${TEST_EXIT_CODE}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: true

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./junit.xml