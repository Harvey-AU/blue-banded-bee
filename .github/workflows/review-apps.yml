name: Deploy Review App

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, closed]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "LICENSE"
      - ".gitignore"
      - "CHANGELOG.md"
      - "SECURITY.md"
      - "Roadmap.md"

jobs:
  deploy-review:
    name: Deploy Review App
    runs-on: blacksmith-4vcpu-ubuntu-2404
    if: github.event.pull_request.draft == false
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Build Docker image locally
        run: docker build -t blue-banded-bee:pr-${{ github.event.number }} .

      - name: Deploy Review App
        run: |
          # Create review app name
          APP_NAME="blue-banded-bee-pr-${{ github.event.number }}"

          # Check if app exists, create if not
          if ! flyctl apps list | grep -q "$APP_NAME"; then
            echo "Creating new review app: $APP_NAME"
            flyctl apps create "$APP_NAME" --org personal
          else
            echo "Review app already exists: $APP_NAME"
          fi

          # Fetch Supabase preview branch credentials
          echo "Fetching Supabase preview credentials..."
          BRANCH="preview/pr-${{ github.event.number }}"
          BRANCH_ENCODED=$(echo "$BRANCH" | sed 's|/|%2F|g')
          MAX_RETRIES=5
          RETRY_DELAY=20
          DB_URL=""
          JWT_SECRET=""

          for attempt in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $attempt: fetching Supabase preview credentials..."
            RESPONSE=$(curl -sS -X POST \
              "https://api.supabase.com/v1/projects/${{ secrets.SUPABASE_PROJECT_REF }}/branch/${BRANCH_ENCODED}/db-credentials" \
              -H "Authorization: Bearer ${{ secrets.SUPABASE_ACCESS_TOKEN }}" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json")

            echo "Supabase response: $RESPONSE"

            DB_URL=$(echo "$RESPONSE" | jq -r '.connectionString // empty')
            JWT_SECRET=$(echo "$RESPONSE" | jq -r '.jwtSecret // empty')

            if [ -n "$DB_URL" ] && [ "$DB_URL" != "null" ]; then
              break
            fi

            if [ "$attempt" -lt "$MAX_RETRIES" ]; then
              echo "Preview branch not ready yet, retrying in ${RETRY_DELAY}s..."
              sleep $RETRY_DELAY
            fi
          done

          if [ -z "$DB_URL" ] || [ "$DB_URL" = "null" ]; then
            echo "Failed to fetch Supabase preview connection string after $MAX_RETRIES attempts"
            exit 1
          fi

          if [ -z "$JWT_SECRET" ] || [ "$JWT_SECRET" = "null" ]; then
            JWT_SECRET="${{ secrets.SUPABASE_JWT_SECRET }}"
          fi

          echo "Setting preview secrets for review app..."
          flyctl secrets set DATABASE_URL="$DB_URL" \
            SUPABASE_JWT_SECRET="$JWT_SECRET" \
            --app $APP_NAME --stage

          # Deploy to review app with local image (this will apply staged secrets)
          FLY_REGION=syd flyctl deploy \
            --app $APP_NAME \
            --config .fly/review_apps.toml \
            --local-only \
            --image blue-banded-bee:pr-${{ github.event.number }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Comment PR with app URL
        uses: actions/github-script@v7
        with:
          script: |
            const appName = `blue-banded-bee-pr-${{ github.event.number }}`;
            const appUrl = `https://${appName}.fly.dev`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üêù **Review App Deployed!**
              
              <a href="${appUrl}" target="_blank">Homepage: ${appUrl}</a>
              
              üìã **Test Features:**
              1. <a href="${appUrl}/dashboard" target="_blank">Visit dashboard: ${appUrl}/dashboard</a>
              2. Test authentication and job creation flow
              3. Check dashboard functionality
              4. Verify database operations work correctly
              
              üóÑÔ∏è **Database**: Shared test database
              ‚ö†Ô∏è *Preview environment - app and database cleaned up when PR closes*`
            });

  cleanup-review:
    name: Cleanup Review App
    runs-on: blacksmith-4vcpu-ubuntu-2404
    if: github.event.action == 'closed'

    steps:
      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Destroy Review App
        run: |
          APP_NAME="blue-banded-bee-pr-${{ github.event.number }}"
          flyctl apps destroy $APP_NAME --yes || echo "App may not exist"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}# Force redeploy
